# Generated by Django 5.1.7 on 2025-04-29 23:46
#
from django.db import migrations
#
#
# def set_default_company(apps, schema_editor):
#     Company = apps.get_model("organizations", "Company")
#     Organization = apps.get_model("organizations", "Organization")
#     User = apps.get_model("authentication", "CustomUser")
#
#     # Create a default company (or fetch one)
#     default_owner = User.objects.first()
#     default_company = Company.objects.create(name="Default Comp.", owner=default_owner)
#
#     # Update all organizations with no company
#     Organization.objects.filter(company__isnull=True).update(company=default_company)
#
#
# class Migration(migrations.Migration):
#     dependencies = [
#         ("organizations", "0006_remove_organization_owners_company_and_more"),
#     ]
#
#     operations = [
#         migrations.RunPython(set_default_company),
#     ]




def set_default_company(apps, schema_editor):
    Company = apps.get_model("organizations", "Company")
    Organization = apps.get_model("organizations", "Organization")
    User = apps.get_model("authentication", "CustomUser")

    # Get the first user safely (may return None)
    default_owner = User.objects.first()

    if default_owner is None:
        # No user exists, skip or create a dummy user, or raise error
        return

    # Check if default company already exists to avoid duplicates
    default_company, created = Company.objects.get_or_create(
        name="Default Comp.",
        defaults={"owner": default_owner},
    )

    # Update organizations missing company
    Organization.objects.filter(company__isnull=True).update(company=default_company)




class Migration(migrations.Migration):
    dependencies = [
        ("organizations", "0006_remove_organization_owners_company_and_more"),
    ]

    operations = [
        migrations.RunPython(set_default_company),
    ]
